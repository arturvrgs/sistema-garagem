/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package garagem;

import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.mysql.cj.jdbc.Driver;
import static garagem.cadastrar.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.time.temporal.TemporalAccessor;

/**
 *
 * @author artur
 */
public class emitirNota extends javax.swing.JFrame {

    /**
     * Creates new form emitirNota
     */
    public emitirNota() {
        initComponents();
        setLocationRelativeTo(null);
        
    }
    
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        campo_placa = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        btEmitirNota = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        try {
            campo_placa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("INSIRA A PLACA DO CARRO:");

        btEmitirNota.setText("Emitir Nota");
        btEmitirNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEmitirNotaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campo_placa)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(btEmitirNota)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(campo_placa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btEmitirNota)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public static void listar(String placa) throws SQLException {
        try(Connection conexao = DriverManager.getConnection(url,usuario,senha)) {
            
            Statement query = conexao.createStatement();
            String sql = "select entrada_veiculo, placa_veiculo from clientes where placa_veiculo = '"+placa+"'";
            ResultSet rs = query.executeQuery(sql);
            
            while(rs.next()) {
 
               String placaVeiculo = rs.getString("placa_veiculo");
               String entradaVeiculo = rs.getString("entrada_veiculo");
               
               LocalDateTime currentDateTime = LocalDateTime.now();
               DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyy-MM-dd HH:mm:ss");
               String saidaVeiculo = currentDateTime.format(formatter);
               
               Document document = new Document();
               
              
              
               try {
               
               PdfWriter.getInstance(document, new FileOutputStream("C:\\Users\\artur\\Documents\\notafiscal.pdf"));
               document.open();
               document.add(new Paragraph("Nota fiscal"));
               document.add(new Paragraph("___________________________________________________________________"));
               document.add(new Paragraph(" "));
               document.add(new Paragraph("Entrada: "+entradaVeiculo));
               document.add(new Paragraph("Saída: "+saidaVeiculo));
               document.add(new Paragraph("Placa do veículo: "+placaVeiculo));
               document.add(new Paragraph(" "));
               document.add(new Paragraph("Preço por hora: 19.99"));
               document.add(new Paragraph("Preço por dia: 49.99"));
               document.add(new Paragraph("Preço por mês: 200.00"));
     
               String caminho = "C:\\Users\\artur\\Documents\\notafiscal.pdf";              
               File arquivo = new File(caminho);
               Desktop.getDesktop().open(arquivo);
               
               document.close();
               
               } catch(Exception e) {
                   System.out.println(e);
               }
            }

            rs.close();
            query.close();
            conexao.close();
            
           
        }
        
           

    }
    public static void deletar(String placa) throws SQLException {
        try(Connection conexao = DriverManager.getConnection(url,usuario,senha)) {
            Statement query = conexao.createStatement();
            String sql = "delete from clientes where placa_veiculo = '"+placa+"'";
            query.executeUpdate(sql);
        }
    }
    private void btEmitirNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEmitirNotaActionPerformed
        try {        
            listar(campo_placa.getText());   
            deletar(campo_placa.getText());
            dispose();
        }
        catch(SQLException e) {
            e.getStackTrace();
        }
    }//GEN-LAST:event_btEmitirNotaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(emitirNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(emitirNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(emitirNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(emitirNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new emitirNota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEmitirNota;
    private javax.swing.JFormattedTextField campo_placa;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
